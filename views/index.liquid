{% render 'partials/head.liquid' %}

<main>
  <h1>Lessons</h1>

  <ol class="progress">
    <li>Listening</li>
    <li>Locked</li>
  </ol>

  <section>
    <h2>Your playlists</h2>
    {% if yourPlaylists.size > 0 %}
      {% render 'partials/list.liquid'
        , playlists: yourPlaylists
        , action: "none" %}
    {% else %}
      <p>You haven't made any playlists yet.</p>
    {% endif %}
  </section>

  <section>
    <h2>All stories</h2>
    <ul class="story-options">
      <li>
        <button>Dutch</button>
      </li>
      <li>
        <button>English</button>
      </li>
      <li>
        <a href="stories">Show all</a>
      </li>
    </ul>
    {% render 'partials/grid.liquid'
      , stories: stories %}
  </section>

  <section>
    <h2>Liked playlists</h2>
    {% if likedPlaylists.size > 0 %}
      {% render "partials/list.liquid"
        , playlists: likedPlaylists
        , action: "unlike" %}
    {% else %}
      <p>Tap the ❤️ at any playlists you love!</p>
    {% endif %}
  </section>

  <section>
    <h2>Suggested playlists</h2>
    {% if suggestedPlaylists.size > 0 %}
      {% render "partials/list.liquid"
        , playlists: suggestedPlaylists
        , action: "like" %}
    {% else %}
      <p>There are currently no suggested playlists.</p>
    {% endif %}
  </section>
</main>

{% render 'partials/foot.liquid' %}

<script type="module">
  const baseURL = "https://fdnd-agency.directus.app/items/tm_";
  const defaultProfile = 124;
  
  if ('fetch' in window && 'DOMParser' in window) {
    document.addEventListener('submit', async function (event) {
      const form = event.target;
  
      if (!form.hasAttribute('data-enhanced')) {
        return;
      }
  
      event.preventDefault();
      form.classList.add('loading')
  
      const response = await fetch(form.action, {
        method: form.method,
        body: new URLSearchParams(new FormData(form))
      });
  
      const responseText = await response.text();
  
      const parser = new DOMParser();
      const responseDOM = parser.parseFromString(responseText, 'text/html');
  
      const newState = responseDOM.querySelector('[data-enhanced="' + form.getAttribute('data-enhanced') + '"]');
  
      // Hier wil je waarschijnlijk de Loading state vervangen door een Success state
      form.outerHTML = newState.outerHTML;
    })
  }
</script>